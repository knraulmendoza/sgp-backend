// <auto-generated />
using System;
using Infraestructura.Utils;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infraestructura.Migrations
{
    [DbContext(typeof(SgpContext))]
    [Migration("20191118002519_TestData")]
    partial class TestData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("Dominio.Entities.Actividad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActividadState")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Costo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaFinalizacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<long>("ProyectoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("Dominio.Entities.Beneficiario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PropuestaId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ProyectoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PropuestaId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Beneficiarios");
                });

            modelBuilder.Entity("Dominio.Entities.Componente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<long>("DimensionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DimensionId");

                    b.ToTable("Componente");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DimensionId = 1L,
                            Nombre = "Recuperación del Territorio Ancestral"
                        },
                        new
                        {
                            Id = 2L,
                            DimensionId = 1L,
                            Nombre = "Desarrollo del modelo del ordenamiento territorial propio del pueblo Kankuamo en función del manejo integral y ancestral de las cuencas hidrográficas, la conservación de los bosques, la biodiversidad y el uso del suelo según su vocación"
                        },
                        new
                        {
                            Id = 3L,
                            DimensionId = 2L,
                            Nombre = "Impulso al proceso de recuperación de la identidad del pueblo Kankuamo"
                        },
                        new
                        {
                            Id = 4L,
                            DimensionId = 2L,
                            Nombre = "Fortalecimiento del sistema de Justicia Propia del pueblo kankuamo"
                        },
                        new
                        {
                            Id = 5L,
                            DimensionId = 2L,
                            Nombre = "Fortalecimiento del Modelo económico propio del pueblo Kankuamo: Autonomía Administrativa y Fisca"
                        },
                        new
                        {
                            Id = 6L,
                            DimensionId = 2L,
                            Nombre = "Fortalecimiento del hábitat y buen vivir del pueblo kankuamo"
                        },
                        new
                        {
                            Id = 7L,
                            DimensionId = 2L,
                            Nombre = "Sistema Educativo Propio"
                        },
                        new
                        {
                            Id = 8L,
                            DimensionId = 2L,
                            Nombre = "Sistema de Salud Propio"
                        },
                        new
                        {
                            Id = 9L,
                            DimensionId = 3L,
                            Nombre = "Salvaguarda, restablecimiento y garantía de los Derechos individuales y colectivos del pueblo indígena Kankuamo"
                        },
                        new
                        {
                            Id = 10L,
                            DimensionId = 3L,
                            Nombre = "Goce efectivos a los Derechos y atención al pueblo Kankuamo afectado por el conflicto"
                        },
                        new
                        {
                            Id = 11L,
                            DimensionId = 3L,
                            Nombre = "Adecuación institucional para el enfoque diferencial"
                        },
                        new
                        {
                            Id = 12L,
                            DimensionId = 3L,
                            Nombre = "Fortalecimiento cultural para la recuperación de los roles del pueblo Kankuamo, como mecanismo para la apropiación cultural y territorial"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Compromiso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ConvenioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConvenioId");

                    b.ToTable("Compromiso");
                });

            modelBuilder.Entity("Dominio.Entities.Comunidad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Comunidad");
                });

            modelBuilder.Entity("Dominio.Entities.Convenio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaDeSuscripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Obbjeto")
                        .HasColumnType("TEXT");

                    b.Property<short>("Plazo")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Convenio");
                });

            modelBuilder.Entity("Dominio.Entities.Dimension", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Dimension");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Nombre = "CONSOLIDACIÓN TERRITORIAL DEL PUEBLO INDÍGENA KANKUAMO PARA LA PROTECCION DE LA MADRE NATURALEZA"
                        },
                        new
                        {
                            Id = 2L,
                            Nombre = "FORTALECIMIENTO DEL GOBIERNO PROPIO Y LA AUTODETERMINACIÓN"
                        },
                        new
                        {
                            Id = 3L,
                            Nombre = "RESTABLECIMIENTO DE LOS DERECHOS COLECTIVOS E INDIVIDUALES DEL PUEBLO KANKUAMO"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Documento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RawData")
                        .HasColumnType("BLOB");

                    b.Property<string>("RespaldoFisicoDigitalizado")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("Dominio.Entities.DocumentoPresupuestal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaDeExpedicion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DocumentoPresupuestal");

                    b.HasDiscriminator<string>("Discriminator").HasValue("DocumentoPresupuestal");
                });

            modelBuilder.Entity("Dominio.Entities.Estrategia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ComponenteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ComponenteId");

                    b.ToTable("Estrategia");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ComponenteId = 1L,
                            Descripcion = "",
                            Nombre = "Consolidación del ordenamiento territorial tradicional del pueblo Kankuamo  a  través del saneamiento y ampliación del  resguardo y  la recuperación y manejo de los   sitios sagrados hasta la “Línea Negra”"
                        },
                        new
                        {
                            Id = 2L,
                            ComponenteId = 1L,
                            Descripcion = "",
                            Nombre = "Recuperación de los elementos ambientales del Territorio Kankuamo: bosques secundarios, rastrojos, cuencas abastecedoras mediante la  regeneración natural, y las zonas de alto nivel de erosión y potrerización, mediante la reforestación con especies nativas y la reducción del pastoreo extensivo."
                        },
                        new
                        {
                            Id = 3L,
                            ComponenteId = 2L,
                            Descripcion = "",
                            Nombre = "Reglamentar los usos y manejo de la tierra, los bosques, las fuentes hídricas, la fauna  en aras de garantizar su preservación y reducir los factores de contaminación, la fragmentación y la presión antrópica  sobre el territorio"
                        },
                        new
                        {
                            Id = 4L,
                            ComponenteId = 2L,
                            Descripcion = "",
                            Nombre = "Definir, como áreas  de protección absoluta aquellas zonas del Territorio Kankuamo que representen  y/o contengan  valores ancestrales,  bosques primarios, corredores ecológicos,  fuentes hídricas y altos niveles de erosión"
                        },
                        new
                        {
                            Id = 5L,
                            ComponenteId = 3L,
                            Descripcion = "",
                            Nombre = "Fortalecer el sistema organizativo tradicional a partir de los principios establecidos en cada ezwama con la coordinación e integración de  los Mamos y Mayores, que parte desde el reconocimiento del centro de Gobierno Indígena. "
                        },
                        new
                        {
                            Id = 6L,
                            ComponenteId = 4L,
                            Descripcion = "",
                            Nombre = "Impulsar y fortalecer la autonomía de las autoridades indígenas en el Territorio Ancestral, definiendo y ordenando las competencias, en el contexto de los mandatos de nuestra Ley de Origen y del control que sobre el territorio ejercen las autoridades indígenas."
                        },
                        new
                        {
                            Id = 7L,
                            ComponenteId = 5L,
                            Descripcion = "",
                            Nombre = "Fortalecimiento de la Economia propia del pueblo kankuamo"
                        },
                        new
                        {
                            Id = 8L,
                            ComponenteId = 6L,
                            Descripcion = "",
                            Nombre = "Promover el desarrollo social sostenible de la población Kankuama."
                        },
                        new
                        {
                            Id = 9L,
                            ComponenteId = 7L,
                            Descripcion = "",
                            Nombre = "Fortalecimiento de la calidad, cobertura, eficiencia y pertinencia de la educación formal y no formal que se implementa en la población kankuama, teniendo en cuenta el contexto socio-cultural de la etnia y los lineamientos del MEN"
                        },
                        new
                        {
                            Id = 10L,
                            ComponenteId = 8L,
                            Descripcion = "",
                            Nombre = "Recuperaciòn del Orden Material y Espiritual del Territorio Ancestral Kankuamo : ARMONIZACION DEL ORDENAMIENTO DE LA VIDA DESDE LOS ENFOQUES DE: SALUD Y ENFERMDAD EN LOS ESPIRITUAL Y MATERIAL."
                        },
                        new
                        {
                            Id = 11L,
                            ComponenteId = 9L,
                            Descripcion = "",
                            Nombre = "Generar espacios y mecanismos de convivencia pacífica y de resistencia al conflicto armado, a partir de la cohesión sociocultural, la armonía  familiar, la resolución de conflictos comunitarios, la prevención y atención oportuna del desplazamiento, la atención psicosocial y reparación integral a las víctimas y el aprovechamiento adecuado del tiempo libre."
                        },
                        new
                        {
                            Id = 12L,
                            ComponenteId = 9L,
                            Descripcion = "",
                            Nombre = "Programa de atención a la población Kankuama en situación de desplazamiento que garantice: Atención humanitaria, estabilización socio económica de acuerdo a nuestros usos y costumbres, acceso a la vivienda, orientación y asistencia jurídica, administrativa y de acompañamiento para la exigibilidad de los derechos de los desplazados y crear mecanismo que garanticen la superación de afectaciones y daños."
                        },
                        new
                        {
                            Id = 13L,
                            ComponenteId = 10L,
                            Descripcion = "",
                            Nombre = "Autoprotección colectiva e individual del Pueblo Indígena Kankuamo."
                        },
                        new
                        {
                            Id = 14L,
                            ComponenteId = 10L,
                            Descripcion = "",
                            Nombre = "Estabilización Socio-económica de la población en situación de desplazamiento."
                        },
                        new
                        {
                            Id = 15L,
                            ComponenteId = 11L,
                            Descripcion = "",
                            Nombre = "ncidencia para construcción y la formulación de una política pública/norma/circular/ directriz en la que se establezcan los  lineamientos para la atención de la  población Kankuama."
                        },
                        new
                        {
                            Id = 16L,
                            ComponenteId = 12L,
                            Descripcion = "",
                            Nombre = "Plan de Pervivencia de los miembros del Pueblo Kankuamo con un alcance integral y un espectro amplio que abarque todos los sitios donde se encuentren los(as) Kankuamos(as) víctimas del conflicto armado de forma directa o indirecta;"
                        });
                });

            modelBuilder.Entity("Dominio.Entities.IngresoOnceava", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Interes")
                        .HasColumnType("TEXT");

                    b.Property<long>("SoporteInteresId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SoporteValorId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SoporteInteresId");

                    b.HasIndex("SoporteValorId");

                    b.ToTable("IngresoOnceava");
                });

            modelBuilder.Entity("Dominio.Entities.Programa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<long>("EstrategiaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EstrategiaId");

                    b.ToTable("Programa");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Descripcion = "",
                            EstrategiaId = 1L,
                            Nombre = "Saneamiento y ampliación del Resguardo Kankuamo"
                        },
                        new
                        {
                            Id = 2L,
                            Descripcion = "rotección y Recuperación de Espacios Sagrados",
                            EstrategiaId = 1L,
                            Nombre = "Protección y Recuperación de Espacios Sagrados"
                        },
                        new
                        {
                            Id = 3L,
                            Descripcion = "",
                            EstrategiaId = 2L,
                            Nombre = "Conservacion y proteccion ambiental  del territorio kankuamo."
                        },
                        new
                        {
                            Id = 4L,
                            Descripcion = "",
                            EstrategiaId = 3L,
                            Nombre = "Conservacion y proteccion ambiental  del territorio kankuamo."
                        },
                        new
                        {
                            Id = 5L,
                            Descripcion = "",
                            EstrategiaId = 4L,
                            Nombre = "Conservacion y proteccion ambiental  del territorio kankuamo."
                        },
                        new
                        {
                            Id = 6L,
                            Descripcion = "",
                            EstrategiaId = 6L,
                            Nombre = "Fortalecimiento de los instrumentos y mecanismos internos para el Control Social del pueblo kankuamo "
                        },
                        new
                        {
                            Id = 7L,
                            Descripcion = "Recuperaciòn del tejido sociocultural para garantizar el diálogo intergeneracional y la reapropiación de las Normas Propias",
                            EstrategiaId = 6L,
                            Nombre = "Recuperaciòn del tejido sociocultural para garantizar el diálogo intergeneracional y la reapropiación de las Normas Propias"
                        },
                        new
                        {
                            Id = 8L,
                            Descripcion = "",
                            EstrategiaId = 7L,
                            Nombre = "Fortalecimeinto de la autonomia alimentaria del pueblo kankuamo."
                        },
                        new
                        {
                            Id = 9L,
                            Descripcion = "",
                            EstrategiaId = 7L,
                            Nombre = "Fortalecimiento, promoción  de los sistemas propios de economía del pueblo kankuamo."
                        },
                        new
                        {
                            Id = 10L,
                            Descripcion = "",
                            EstrategiaId = 8L,
                            Nombre = "Fortalecimiento de la calidad de vida mediante la construcción y mejoramiento de viviendas en las comunidades del Resguardo Kankuamo"
                        },
                        new
                        {
                            Id = 11L,
                            Descripcion = "",
                            EstrategiaId = 8L,
                            Nombre = "Construcción y Fortalecimiento de la infraestructura vial del Resguardo Kankuamo"
                        },
                        new
                        {
                            Id = 12L,
                            Descripcion = "",
                            EstrategiaId = 9L,
                            Nombre = "Educación propia."
                        },
                        new
                        {
                            Id = 13L,
                            Descripcion = "",
                            EstrategiaId = 10L,
                            Nombre = "Construccion e Implementacion del Sistema Intercultural de Salud  Propia del Pueblo Kankuamo"
                        },
                        new
                        {
                            Id = 14L,
                            Descripcion = "",
                            EstrategiaId = 11L,
                            Nombre = "Salvaguarda, restablecimiento y garantias de los derechos colectivos e individuales."
                        },
                        new
                        {
                            Id = 15L,
                            Descripcion = "",
                            EstrategiaId = 12L,
                            Nombre = "Salvaguarda, restablecimiento y garantias de los derechos colectivos e individuales."
                        },
                        new
                        {
                            Id = 16L,
                            Descripcion = "",
                            EstrategiaId = 13L,
                            Nombre = "Programa de Protección Propia."
                        },
                        new
                        {
                            Id = 17L,
                            Descripcion = "",
                            EstrategiaId = 14L,
                            Nombre = "Impulso a las actividades de recuperación, reconstrucción y fortalecimiento de los procesos de autonomia alimentaria atraves de los procesos y visión propia del Pueblo Kankuamo"
                        },
                        new
                        {
                            Id = 18L,
                            Descripcion = "",
                            EstrategiaId = 15L,
                            Nombre = "Fortalecimiento de las capacidades organizativas y técnicas de los miembros del pueblo kankuamo en situación de desplazamiento."
                        },
                        new
                        {
                            Id = 19L,
                            Descripcion = "",
                            EstrategiaId = 16L,
                            Nombre = "Incentivar y Reactivar la Productividad en la población Kankuama en situación de desplazamiento, para fortalecer procesos de estabilización socioeconómica y retorno digno."
                        });
                });

            modelBuilder.Entity("Dominio.Entities.Propuesta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("DocumentoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaDeAprovacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaDePresentacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaDeRegistro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroDeFamilias")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PresupuestoEstimado")
                        .HasColumnType("TEXT");

                    b.Property<int>("PropuestaState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("DocumentoId");

                    b.ToTable("Propuestas");
                });

            modelBuilder.Entity("Dominio.Entities.Proyecto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCierre")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaDeCierrePrevista")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaEjecucion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PresupuestoAprobado")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PresupuestoEjecutado")
                        .HasColumnType("TEXT");

                    b.Property<long>("ProgramaId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PropuestaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProyectoState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("ProgramaId");

                    b.HasIndex("PropuestaId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("Dominio.Entities.ProyectoComunidad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ComunidadId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ProyectoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComunidadId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("ProyectoComunidad");
                });

            modelBuilder.Entity("Dominio.Entities.Transaccion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Monto")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Transaccion");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Transaccion");
                });

            modelBuilder.Entity("Dominio.Entities.CertificadoDeDisponibilidadPresupuestal", b =>
                {
                    b.HasBaseType("Dominio.Entities.DocumentoPresupuestal");

                    b.Property<DateTime>("FechaDeVencimiento")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ProyectoId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("RegistroPresupuestalId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("RegistroPresupuestalId");

                    b.HasDiscriminator().HasValue("CertificadoDeDisponibilidadPresupuestal");
                });

            modelBuilder.Entity("Dominio.Entities.RegistroPresupuestal", b =>
                {
                    b.HasBaseType("Dominio.Entities.DocumentoPresupuestal");

                    b.Property<long?>("BeneficiarioId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CompromisoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("VigenciaFiscal")
                        .HasColumnType("TEXT");

                    b.Property<string>("identificacion")
                        .HasColumnType("TEXT");

                    b.HasIndex("BeneficiarioId");

                    b.HasIndex("CompromisoId");

                    b.HasDiscriminator().HasValue("RegistroPresupuestal");
                });

            modelBuilder.Entity("Dominio.Entities.TransaccionBinaria", b =>
                {
                    b.HasBaseType("Dominio.Entities.Transaccion");

                    b.Property<long?>("ProyectoDeDestinoId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ProyectoId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ProyectoDeDestinoId");

                    b.HasIndex("ProyectoId");

                    b.HasDiscriminator().HasValue("TransaccionBinaria");
                });

            modelBuilder.Entity("Dominio.Entities.TransaccionUnaria", b =>
                {
                    b.HasBaseType("Dominio.Entities.Transaccion");

                    b.Property<string>("Concepto")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ProyectoId")
                        .HasColumnName("TransaccionUnaria_ProyectoId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ProyectoId");

                    b.HasDiscriminator().HasValue("TransaccionUnaria");
                });

            modelBuilder.Entity("Dominio.Entities.Actividad", b =>
                {
                    b.HasOne("Dominio.Entities.Proyecto", null)
                        .WithMany("Actividades")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entities.Beneficiario", b =>
                {
                    b.HasOne("Dominio.Entities.Propuesta", null)
                        .WithMany("Beneficiarios")
                        .HasForeignKey("PropuestaId");

                    b.HasOne("Dominio.Entities.Proyecto", null)
                        .WithMany("Beneficiarios")
                        .HasForeignKey("ProyectoId");
                });

            modelBuilder.Entity("Dominio.Entities.Componente", b =>
                {
                    b.HasOne("Dominio.Entities.Dimension", null)
                        .WithMany("Componentes")
                        .HasForeignKey("DimensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entities.Compromiso", b =>
                {
                    b.HasOne("Dominio.Entities.Convenio", "Convenio")
                        .WithMany()
                        .HasForeignKey("ConvenioId");
                });

            modelBuilder.Entity("Dominio.Entities.Estrategia", b =>
                {
                    b.HasOne("Dominio.Entities.Componente", null)
                        .WithMany("Estrategias")
                        .HasForeignKey("ComponenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entities.IngresoOnceava", b =>
                {
                    b.HasOne("Dominio.Entities.Documento", "SoporteInteres")
                        .WithMany()
                        .HasForeignKey("SoporteInteresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Documento", "SoporteValor")
                        .WithMany()
                        .HasForeignKey("SoporteValorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entities.Programa", b =>
                {
                    b.HasOne("Dominio.Entities.Estrategia", null)
                        .WithMany("Programas")
                        .HasForeignKey("EstrategiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entities.Propuesta", b =>
                {
                    b.HasOne("Dominio.Entities.Documento", "Documento")
                        .WithMany()
                        .HasForeignKey("DocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entities.Proyecto", b =>
                {
                    b.HasOne("Dominio.Entities.Programa", "Programa")
                        .WithMany("Proyectos")
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Propuesta", "Propuesta")
                        .WithMany()
                        .HasForeignKey("PropuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entities.ProyectoComunidad", b =>
                {
                    b.HasOne("Dominio.Entities.Comunidad", "Comunidad")
                        .WithMany("ProyectosComunidads")
                        .HasForeignKey("ComunidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Proyecto", "Proyecto")
                        .WithMany("ProyectosComunidads")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entities.CertificadoDeDisponibilidadPresupuestal", b =>
                {
                    b.HasOne("Dominio.Entities.Proyecto", null)
                        .WithMany("CertificadosDeDisponibilidaPresupuestales")
                        .HasForeignKey("ProyectoId");

                    b.HasOne("Dominio.Entities.RegistroPresupuestal", "RegistroPresupuestal")
                        .WithMany()
                        .HasForeignKey("RegistroPresupuestalId");
                });

            modelBuilder.Entity("Dominio.Entities.RegistroPresupuestal", b =>
                {
                    b.HasOne("Dominio.Entities.Beneficiario", "Beneficiario")
                        .WithMany()
                        .HasForeignKey("BeneficiarioId");

                    b.HasOne("Dominio.Entities.Compromiso", "Compromiso")
                        .WithMany()
                        .HasForeignKey("CompromisoId");
                });

            modelBuilder.Entity("Dominio.Entities.TransaccionBinaria", b =>
                {
                    b.HasOne("Dominio.Entities.Proyecto", "ProyectoDeDestino")
                        .WithMany()
                        .HasForeignKey("ProyectoDeDestinoId");

                    b.HasOne("Dominio.Entities.Proyecto", "Proyecto")
                        .WithMany("TransaccionesBinarias")
                        .HasForeignKey("ProyectoId");
                });

            modelBuilder.Entity("Dominio.Entities.TransaccionUnaria", b =>
                {
                    b.HasOne("Dominio.Entities.Proyecto", "Proyecto")
                        .WithMany("TransaccionesUnarias")
                        .HasForeignKey("ProyectoId");
                });
#pragma warning restore 612, 618
        }
    }
}
